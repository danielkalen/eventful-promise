{
  "name": "eventful-promise",
  "version": "1.0.0",
  "description": "Create a Promise/EventEmitter hybrid that can emit events even after being resolved",
  "main": "index.js",
  "mocha_opts": "-u tdd --compilers coffee:coffee-script/register --require coffee-coverage/register-istanbul --recursive --slow 1000 --timeout 5000",
  "scripts": {
    "prepublish": "npm run test",
    "coverage": "npm run coverage:run && npm run coverage:badge",
    "coverage:run": "forCoverage=true istanbul cover --dir coverage node_modules/mocha/bin/_mocha -- $npm_package_mocha_opts",
    "coverage:badge": "badge-gen -d ./.config/badges/coverage",
    "test": "mocha $npm_package_mocha_opts"
  },
  "author": "danielkalen",
  "repository": {
    "type": "git",
    "url": "https://github.com/danielkalen/eventful-promise"
  },
  "license": "ISC",
  "devDependencies": {
    "badge-gen": "^1.0.1",
    "chai": "^3.5.0",
    "mocha": "^3.2.0"
  },
  "dependencies": {
    "bluebird": "^3.5.0",
    "coffee-script": "^1.12.4"
  }
}
